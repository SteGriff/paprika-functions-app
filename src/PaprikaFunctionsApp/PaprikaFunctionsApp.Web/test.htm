<!DOCTYPE HTML>
<html>
<head>
    <title></title>
    <meta http-equiv="content-type" content="text/html; charset=utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="tachyons.min.css" />
    <style>
        .label {
            margin: 0 4px;
            padding: 1px 4px;
            border-radius: 2px;
        }

        .grey {
            background-color: #b0b0b0;
        }

        .success {
            background-color: #45d043;
        }

        .error {
            background-color: #e14040;
        }
    </style>
</head>
<body class="sans-serif">
    <main class="ma2 ma4-l">
        <h1>Paprika Functions App Test</h1>

        <p>Auth (all requests)</p>
        <input type="text" class="js-username" value="adam" />
        <input type="password" class="js-password" value="adampassword" />

        <p>Upload grammar file</p>
        <input type="file" class="js-file">
        <button type="button" onclick="uploadFile()">Upload</button>

        <p>Upload grammar text</p>
        <textarea class="js-grammar-text"></textarea>
        <button type="button" onclick="uploadText()">Upload</button>

        <p>Query</p>
        <input type="text" class="js-query">
        <button type="button" onclick="query()">Send</button>

        <p>Results <span class="js-loading label grey">loading...</span></p>
        <ul class="js-results"></ul>

    </main>
    <script src="jquery-2.2.4.min.js"></script>
    <script>
        function getOptions() {
            var headers = {
                'username': $('.js-username').val(),
                'password': $('.js-password').val()
            };

            return {
                beforeSend: function (request) {
                    request.setRequestHeader("username", headers.username);
                    request.setRequestHeader("password", headers.password);
                },
                cache: false,
                contentType: false,
                processData: false,
                method: 'POST',
                success: function onSuccess(response, statusWord, xhr) {
                    $('.js-results').append(newLine(true, xhr.statusText, xhr.responseText));
                },
                error: function onError(xhr, statusWord, response) {
                    $('.js-results').append(newLine(false, xhr.statusText, xhr.responseText));
                },
                complete: function onResponse(data) {
                    console.log("onReponse", data)
                    loading(false);
                }
            }
        }

        function newLine(success, status, response) {
            var cssClass = success ? "success" : "error"
            return "<li><span class='label " + cssClass + "'>" + status + "</span><code>" + response + "</code></li>"
        }

        function uploadFile() {
            var data = new FormData();
            $.each($('.js-file')[0].files, function (i, file) {
                data.append('file-' + i, file);
            });

            var options = getOptions();
            options.url = 'http://localhost:7071/api/Grammar/UploadFile';
            options.data = data;
            options.method = 'POST';

            loading(true);
            $.ajax(options);
        }

        function uploadText() {
            var options = getOptions();
            options.url = 'http://localhost:7071/api/Grammar/UploadText';
            var text = $('.js-grammar-text').val();
            options.data = { "text" : text };
            options.method = 'POST';
            options.contentType = "application/json";
            options.processData = true;

            loading(true);
            $.ajax(options);
        }

        function query() {
            var query = $('.js-query').val();
            query = encodeURI(query);

            var options = getOptions();
            options.url = 'http://localhost:7071/api/Grammar/Resolve/' + query;
            options.method = 'GET';

            loading(true);
            $.ajax(options);
        }

        function loading(isOn)
        {
            if (isOn) {
                $('.js-loading').show();
            }
            else
            {
                $('.js-loading').hide();
            }
        }

        $(function () { loading(false); });
    </script>
</body>
</html>